version: 2

jobs:
  build:
    docker:
      - image: circleci/node

    steps:
      - checkout

      - restore_cache:
          name: Restore node.js dependencies from cache
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Install node.js dependencies
          command: make node_modules

      - save_cache:
          name: Cache node.js dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - restore_cache:
          name: Restore Elm dependencies from cache
          keys:
            - v1-dependencies-{{ checksum "elm-package.json" }}

      - run:
          name: Install Elm dependencies
          command: make elm-stuff/packages

      - save_cache:
          name: Cache Elm dependencies
          paths:
            - elm-stuff/packages
          key: v1-dependencies-{{ checksum "elm-package.json" }}

      - run:
          name: Build
          command: make build

      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy-infrastructure:
    docker:
      - image: hashicorp/terraform

    steps:
      - checkout

      - run:
          name: Initialize Terraform
          command: terraform init

      - run:
          name: Deploy infrastructure
          command: terraform apply -auto-approve

  deploy-site:
    docker:
      - image: circleci/python

    steps:
      - checkout

      - run:
          name: Install the AWS CLI
          command: pip install --user awscli

      - attach_workspace:
          at: .

      - run:
          name: Push to AWS S3
          command: ~/.local/bin/aws s3 sync build s3://noodlesandwich.com --acl=public-read --delete

workflows:
  version: 2
  deploy:
    jobs:
      - build

      - deploy-infrastructure:
          context: Deployment

      - deploy-site:
          requires:
            - build
            - deploy-infrastructure
          context: Deployment
